// <auto-generated />
using System;
using AgentopsServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AgentopsServer.Migrations
{
    [DbContext(typeof(AgentServerDbContext))]
    partial class AgentServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgentopsServer.Models.Agent", b =>
                {
                    b.Property<string>("AgentId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("AgentopsServer.Models.AgentSession", b =>
                {
                    b.Property<int>("AgentSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AgentSessionId"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<string>("EndState")
                        .HasColumnType("text");

                    b.Property<string>("EndStateReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("InitTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("AgentSessionId");

                    b.ToTable("AgentSessions");
                });

            modelBuilder.Entity("AgentopsServer.Models.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AgentExtGuid")
                        .HasColumnType("text");

                    b.Property<int>("CompletionTokens")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventExtGuid")
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .HasColumnType("text");

                    b.Property<DateTime>("InitTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int>("PromptTokens")
                        .HasColumnType("integer");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AgentopsServer.Models.EventReturn", b =>
                {
                    b.Property<string>("EventReturnId")
                        .HasColumnType("text");

                    b.Property<int>("CompletionTokens")
                        .HasColumnType("integer");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<int>("PromptTokens")
                        .HasColumnType("integer");

                    b.HasKey("EventReturnId");

                    b.ToTable("EventReturns");
                });

            modelBuilder.Entity("AgentopsServer.Models.Params", b =>
                {
                    b.Property<int>("ParamsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ParamsId"));

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Stop")
                        .HasColumnType("text");

                    b.Property<bool>("Stream")
                        .HasColumnType("boolean");

                    b.HasKey("ParamsId");

                    b.HasIndex("EventId");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("AgentopsServer.Models.Prompt", b =>
                {
                    b.Property<int>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PromptId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("PromptId");

                    b.HasIndex("EventId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("AgentopsServer.Models.Params", b =>
                {
                    b.HasOne("AgentopsServer.Models.Event", "Event")
                        .WithMany("Params")
                        .HasForeignKey("EventId");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("AgentopsServer.Models.Prompt", b =>
                {
                    b.HasOne("AgentopsServer.Models.Event", "Event")
                        .WithMany("Prompts")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("AgentopsServer.Models.Event", b =>
                {
                    b.Navigation("Params");

                    b.Navigation("Prompts");
                });
#pragma warning restore 612, 618
        }
    }
}
